//@execute 0=42; 1=42; 2=42; 4=42; 8=42; 16=42; 32=42; 64=42; 128=42; 255=42; 3=42; 33=42; 97=42

layout Layout_i1 {
	+0	field:	i1;
	=1;
}
layout Layout_i2 {
	+0	field:	i2;
	=1;
}
layout Layout_i3 {
	+0	field:	i3;
	=1;
}
layout Layout_i4 {
	+0	field:	i4;
	=1;
}
layout Layout_i5 {
	+0	field:	i5;
	=1;
}
layout Layout_i6 {
	+0	field:	i6;
	=1;
}
layout Layout_i7 {
	+0	field:	i7;
	=1;
}
layout Layout_i8 {
	+0	field:	i8;
	=1;
}

var data = Array<byte>.new(1);
var l1 = Ref<Layout_i1>.of(data);
var l2 = Ref<Layout_i2>.of(data);
var l3 = Ref<Layout_i3>.of(data);
var l4 = Ref<Layout_i4>.of(data);
var l5 = Ref<Layout_i5>.of(data);
var l6 = Ref<Layout_i6>.of(data);
var l7 = Ref<Layout_i7>.of(data);
var l8 = Ref<Layout_i8>.of(data);

def main(a: byte) -> int {
	data[0] = a;
	if (l1.field != i1.view(a)) return 1000;
	if (l2.field != i2.view(a)) return 2000;
	if (l3.field != i3.view(a)) return 3000;
	if (l4.field != i4.view(a)) return 4000;
	if (l5.field != i5.view(a)) return 5000;
	if (l6.field != i6.view(a)) return 6000;
	if (l7.field != i7.view(a)) return 7000;
	if (l8.field != i8.view(a)) return 8000;
	return 42;
}
